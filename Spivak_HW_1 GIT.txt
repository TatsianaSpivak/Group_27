
  JSON

 4.Создать внешний репозиторий c названием JSON ==== зайти в Github Repositories=== New=== Repository name JSON====Add a README file====Create Repository

 5. Клонировать репозиторий JSON на локальный компьютер ====git clone https://github.com/TatsianaSpivak/JSON.git

 6. Внутри локального JSON создать файл “new.json” ==== touch new.json

 7. Добавить файл под гит===== git add .

 8. Закоммитить файл =====git commit -m "add 1 file"

 9. Отправить файл на внешний GitHub репозиторий ====git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 

    Всё написать в формате JSON. ==== vim new.json === вводные данные=== esc :wq

11. Отправить изменения на внешний репозиторий =====git commit -am "change 1 file" ===> git push

12. Создать файл preferences.json ==== touch preferences.json

13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
любимое время года, сторона которую хотели бы посетить) в формате JSON ==== vim preferences.json ===вводные данные=== esc :wq

14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON=== vim skills.json

15. Отправить сразу 2 файла на внешний репозиторий ===  git add . ===> git commit -m "add 2 files" ===> git push

16. На веб интерфейсе создать файл bug_report.json === add file==>create new file==>name bug_report.json

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе === commit new file

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON === выбрать файл bug_report.json==== редактировать

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе === фиксация изменений 

20. Синхронизировать внешний и локальный репозиторий JSON ===== git pull


XML

21. Создать внешний репозиторий c названием XML ==== в Github Repositories=== New=== Repository name XML ====Add a README file====Create Repository

22. Клонировать репозиторий XML на локальный компьютер====  git clone https://github.com/TatsianaSpivak/XML.git

23. Внутри локального XML создать файл “new.xml” ==== touch new.xml

24. Добавить файл под гит ==== git add . 

25. Закоммитить файл ==== git commit -m "add 1 file"

26. Отправить файл на внешний GitHub репозиторий=== git push

27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML ==== vim new.xml === вводные данные=== esc :wq ===

28. Отправить изменения на внешний репозиторий ===> git commit -am "edd 1 file" ===> git push

29. Создать файл preferences.xml === touch preferences.xml

30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, 
сторона которую хотели бы посетить) в формате XML ====vim preferences.xml ===вводные данные=== esc :wq ===

31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML  === touch skills.xml

32. Сделать коммит в одну строку ====  git add --all && git commit -m "add 1 file"

33. Отправить сразу 2 файла на внешний репозиторий === git push

34. На веб интерфейсе создать файл bug_report.xml === add file ==>create new file ==>name bug_report.xml

35. Сделать Commit changes (сохранить) изменения на веб интерфейсе === commit new file

36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML ===>выбрать файл bug_report.xml====> редактировать

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе === фиксация изменений 

38. Синхронизировать внешний и локальный репозиторий XML ==== git pull


TXT

1. Создать внешний репозиторий c названием TXT ==== в Github Repositories=== New=== Repository name TXT ====Add a README file====Create Repository

2. Клонировать репозиторий TXT на локальный компьютер === git clone https://github.com/TatsianaSpivak/TXT.git

3. Внутри локального TXT создать файл “new.txt” === touch new.txt

4. Добавить файл под гит === git add .

5. Закоммитить файл === git commit -m "add 1 file"

6. Отправить файл на внешний GitHub репозиторий === git push

7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
будущая желаемая зарплата). Всё написать в формате TXT. ===== vim new.txt

8. Отправить изменения на внешний репозиторий ==== git commit -am "change 1 file" ====> git push

9. Создать файл preferences.txt ==== touch preferences.txt

10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, 
любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT ======= vim preferences.txt ===вводные данные=== esc :wq ===

11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT ===== vim skills.txt

12. Сделать коммит в одну строку git ==== git add --all && git commit -m "add 1 file"

13. Отправить сразу 2 файла на внешний репозиторий ==== git push

14. На веб интерфейсе создать файл bug_report.txt ==== add file==create new file==name bug_report.txt

15. Сделать Commit changes (сохранить) изменения на веб интерфейсе=====commit new file

16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT=====выбрать файл bug_report.txt==== редактировать

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе====фиксация изменений

18. Синхронизировать внешний и локальный репозиторий TXT ==== git pull






 



